plugins {
    id 'net.kebernet.xddl' version '0.9.0'
}

dependencies {
    implementation 'com.beust:jcommander:1.72'
    implementation 'javax.inject:javax.inject:1'
    api project(":xddl-core")
    api project(":xddl-plugin-migrate-lib")
    api project(":xddl-plugin-migrate")
    api project(":xddl-plugin-java")
    api 'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.5.2'
}

sourceSets {
    integration {
        java.srcDirs([file("${project.buildDir}/xddl-integration"), file('src/integration/java')])
        resources.srcDir file('src/integration/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}


task glide(type: XDDLGlide){
    includeDirectories = [file("src/integration/xddl/includes")]
    patchesDirectory = file("src/integration/xddl/patches")
    sourceFile = file("src/integration/xddl/Specification.xddl.json")
}

task glideJava(type: XDDLGlideGenerate, dependsOn: glide){
    plugin "java"
    outputDirectory file("${project.buildDir}/xddl-integration")
}

task glideMigration(type: XDDLGlideGenerate, dependsOn: glide){
    plugin "migrate"
    outputDirectory file("${project.buildDir}/xddl-integration")
}


task elasticsearch(type: XDDLGlideGenerate, dependsOn: glide) {
    plugin "elasticsearch"
}


compileIntegrationJava.dependsOn glideJava
compileIntegrationJava.dependsOn glideMigration

tasks.spotbugsIntegration.enabled = false

spotless {
    java {
        target file("src/main/java")
    }
}

task integration(type: Test, dependsOn: elasticsearch) {
    description = 'Runs the functional tests against an actual elastic search instance'
    group = 'verification'
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    mustRunAfter test //, integrationTest
    testLogging {
        showStandardStreams = true
    }
    jacoco {
        enabled = true
        append = true
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
}

